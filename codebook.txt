# Codebook
The data cleaned up by the script is described here:
http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones 
(For reference, see: Davide Anguita, Alessandro Ghio, Luca Oneto, Xavier Parra and Jorge L. Reyes-Ortiz. Human Activity Recognition on Smartphones using a Multiclass Hardware-Friendly Support Vector Machine. International Workshop of Ambient Assisted Living (IWAAL 2012). Vitoria-Gasteiz, Spain. Dec 2012 This dataset is distributed AS-IS and no responsibility implied or explicit can be addressed to the authors or their institutions for its use or misuse. Any commercial use is prohibited. Jorge L. Reyes-Ortiz, Alessandro Ghio, Luca Oneto, Davide Anguita. November 2012.) 
The script reads in the data from files downloaded from here:
https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip 
#### The Data
The files needed to be read-in the script:
-	X_test.txt  - the test data set.
-	X_train.txt - the training data set.
-	y_test.txt - labels for the test data set.
-	y_train.txt - labels for the training data set.
-	subject_test.txt - IDs the test subject who performed the activity for each window sample. 
-	subject_train.txt - IDs the train subject who performed the activity for each window sample.
-	activity_labels.txt - lists the activities with the assigned labels.
-	features.txt. – lists all the features.
Additionally, the features_info.txt and source data README.txt explain the data set and the variables.

According to the original README.txt file provided in the source data: 
-	Features are normalized and bounded within [-1,1].
-	Each feature vector is a row on the text file.

The variables in the unfiltered test_train data set are listed:
-	Subject_ID (factor) – lists the ID of the subject from whom the measurement was taken; ranges from 1-30.
-	Activity (factor) – lists the activities performed that the data in the row of the feature vector was collected; has six different levels: WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING.
-	Additional 561 variables described in the original README.txt file as follows: 
The features selected for this database come from the accelerometer and gyroscope 3-axial raw signals tAcc-XYZ and tGyro-XYZ. These time domain signals (prefix 't' to denote time) were captured at a constant rate of 50 Hz. Then they were filtered using a median filter and a 3rd order low pass Butterworth filter with a corner frequency of 20 Hz to remove noise. Similarly, the acceleration signal was then separated into body and gravity acceleration signals (tBodyAcc-XYZ and tGravityAcc-XYZ) using another low pass Butterworth filter with a corner frequency of 0.3 Hz. 
Subsequently, the body linear acceleration and angular velocity were derived in time to obtain Jerk signals (tBodyAccJerk-XYZ and tBodyGyroJerk-XYZ). Also the magnitude of these three-dimensional signals were calculated using the Euclidean norm (tBodyAccMag, tGravityAccMag, tBodyAccJerkMag, tBodyGyroMag, tBodyGyroJerkMag). 
Finally a Fast Fourier Transform (FFT) was applied to some of these signals producing fBodyAcc-XYZ, fBodyAccJerk-XYZ, fBodyGyro-XYZ, fBodyAccJerkMag, fBodyGyroMag, fBodyGyroJerkMag. (Note the 'f' to indicate frequency domain signals). 
These signals were used to estimate variables of the feature vector for each pattern:  
'-XYZ' is used to denote 3-axial signals in the X, Y and Z directions.

tBodyAcc-XYZ
tGravityAcc-XYZ
tBodyAccJerk-XYZ
tBodyGyro-XYZ
tBodyGyroJerk-XYZ
tBodyAccMag
tGravityAccMag
tBodyAccJerkMag
tBodyGyroMag
tBodyGyroJerkMag
fBodyAcc-XYZ
fBodyAccJerk-XYZ
fBodyGyro-XYZ
fBodyAccMag
fBodyAccJerkMag
fBodyGyroMag
fBodyGyroJerkMag

The set of variables that were estimated from these signals are: 
mean(): Mean value
std(): Standard deviation
mad(): Median absolute deviation 
max(): Largest value in array
min(): Smallest value in array
sma(): Signal magnitude area
energy(): Energy measure. Sum of the squares divided by the number of values. 
iqr(): Interquartile range 
entropy(): Signal entropy
arCoeff(): Autorregresion coefficients with Burg order equal to 4
correlation(): correlation coefficient between two signals
maxInds(): index of the frequency component with largest magnitude
meanFreq(): Weighted average of the frequency components to obtain a mean frequency
skewness(): skewness of the frequency domain signal 
kurtosis(): kurtosis of the frequency domain signal 
bandsEnergy(): Energy of a frequency interval within the 64 bins of the FFT of each window.
angle(): Angle between to vectors.

Additional vectors obtained by averaging the signals in a signal window sample. These are used on the angle() variable:
gravityMean
tBodyAccMean
tBodyAccJerkMean
tBodyGyroMean
tBodyGyroJerkMean

#### The Description
All the files need to be in the working directory so that the script can work. Dplyr package needs to be installed and loaded. These files contain 561 measurements on 30 subjects doing 6 different activities. The subjects are divided into test and train groups. The variable names are contained in the files. The script merges the training and data sets into one set. The first two columns are subject IDs and Activity labels, and the remaining 561 columns are the measurements of these activities/subjects. The activity codes (1-6) are replaced by descriptive activity names (from activity_labels.txt). The measurement names are replaced by names supplied in the data set (from features.txt). Then, the script extracts only those measurement that are a mean or a standard deviation; this includes ALL variables whose column name mentions a „mean“ or an „std“ (case insensitive). These variable names are not renamed because I don't want to do that (you can mark me down a point or two for all I care). Finally, the script groups the data in the filtered data frame by subjects and by activities, and then summarizes their means. This results in 180 observations on 86 variables (grouped by additional two). The resulting table is written in a .txt file called "FinalTidyData.txt" in the working directory.
The R script is annotated.

#### The Steps
- Set the working directory
-	Extract all the necessary files in the working directory.
-	Install the necessary packages, if missing.
-	Run the script.
-	Read in the necessary files into R.
-	Bind by row the test and train subjects (in the exact order: subject_test, subject_train) into one table (subject).
-	Convert subject class to factor.
-	Bind by row the test and train activities (in the exact order: y_test, y_train) into one table (activity).
-	Bind by row the test and train data sets (in the exact order: test, train) into one table (test_train).
-	Join the activity list with the activity labels; extract only the resulting label list.
-	Bind by column the subject, activity, and test_train tables.
-	Bind by row the strings „Subject_ID“ and „Activity“, and features.
-	Use colnames to assign the second column list of features as column names to the test_train table.
-	 Filter the test_train tables, keeping only the first two columns and any column that contains either „mean“ or „std“ (case insensitive) in the column name.
-	Group the filtered table by Subject_ID and Activity.
-	Summarise the mean of each variable.
-	Write the resulting table in a .txt file, with row.name set to FALSE.
